(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{203:function(t,s,a){t.exports=a.p+"assets/img/diagram.bbde6bd7.png"},204:function(t,s,a){t.exports=a.p+"assets/img/1.7baa0adb.png"},205:function(t,s,a){t.exports=a.p+"assets/img/2.17a5e872.png"},206:function(t,s,a){t.exports=a.p+"assets/img/3.9c0f5682.png"},207:function(t,s,a){t.exports=a.p+"assets/img/4.40cb2a06.png"},208:function(t,s,a){t.exports=a.p+"assets/img/5.a05cb184.png"},209:function(t,s,a){t.exports=a.p+"assets/img/6.9f29dcce.jpg"},210:function(t,s,a){t.exports=a.p+"assets/img/7.b55f87e7.jpg"},211:function(t,s,a){t.exports=a.p+"assets/img/8.12ecb9d6.jpg"},212:function(t,s,a){t.exports=a.p+"assets/img/9.19de29f4.jpg"},213:function(t,s,a){t.exports=a.p+"assets/img/10.73385f65.jpg"},214:function(t,s,a){t.exports=a.p+"assets/img/11.f1467773.jpg"},215:function(t,s,a){t.exports=a.p+"assets/img/12.a882a80d.jpg"},216:function(t,s,a){t.exports=a.p+"assets/img/13.e447176d.jpg"},217:function(t,s,a){t.exports=a.p+"assets/img/14.51b3345b.jpg"},242:function(t,s,a){"use strict";a.r(s);var n=a(28),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"智能合约开发及其部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#智能合约开发及其部署"}},[t._v("#")]),t._v(" 智能合约开发及其部署")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#是什么"}},[t._v("是什么?")])]),n("li",[n("a",{attrs:{href:"#怎么做"}},[t._v("怎么做?")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-智能合约的开发"}},[t._v("1.智能合约的开发")])]),n("li",[n("a",{attrs:{href:"#_2-智能合约的部署"}},[t._v("2.智能合约的部署")])])])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[t._v("#")]),t._v(" 是什么?")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://baike.baidu.com/item/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6",target:"_blank",rel:"noopener noreferrer"}},[t._v("智能合约（Smart Contract）"),n("OutboundLink")],1),t._v("概念于1995年由尼克·萨博（Nick Szabo）首次提出，他给出的定义是如下：")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("智能合约")]),t._v(" "),n("p",[t._v("一个智能合约是一套以数字形式定义的承诺（commitment），包括合约参与方可以在上面执行这些承诺的协议。")])]),t._v(" "),n("p",[t._v("智能合约是一种旨在以信息化方式传播、验证或执行合同的计算机协议，它允许在没有第三方的情况下进行可信交易，这些交易可追踪且不可逆转。通俗直白的讲，智能合约就是一个较为智能的合同或约定，能按照事先约定好的条件，进行自我执行和验证。举个简单的栗子:")]),t._v(" "),n("ul",[n("li",[t._v("我们都听过这样的一种游戏，叫一元夺宝。为什么叫听过呢？因为我们没有见到过有谁真正的用1元幸运的中了一个手机。最终谁中了我们也不知道。但是如果我们采用了智能合约来玩这个游戏，规则就是每个人都向合约地址发送1个代币的资产，然后合约在接收资产达到相应的数量的时候，就自动执行抽奖逻辑，最终合约将游戏资产发送给中奖的地址。在这个过程中，合约的代码是公开的，每个人都能够看到合约执行的逻辑；其次，参与人数是公开的，有多少人什么时间参与游戏是清楚的；最后，中奖的地址是公开的，谁中奖了什么时候中奖了中了多少奖都是公开透明的且不可篡改的。")])]),t._v(" "),n("p",[t._v("对于当前所讲的编写和部署的智能合约，我简单的理解就是：运行在分布式网络中的一套代码，其运行规则和逻辑在部署的一刻已经进行了规定，并且后续的运行不受其他无关因素的影响。当然这仅仅是作者本人的一面之词，具体的专业的智能合约的讲解请移步至搜索引擎查询。接下来我们讨论一下，如何通过"),n("a",{attrs:{href:"https://baike.baidu.com/item/EOS/20441174",target:"_blank",rel:"noopener noreferrer"}},[t._v("EOS"),n("OutboundLink")],1),t._v("来部署一个"),n("a",{attrs:{href:"https://github.com/qianduanxinlv/vuepress_blog/tree/master/docs/dapp/contract/yijiaxunkeji",target:"_blank",rel:"noopener noreferrer"}},[t._v("Todolist智能合约"),n("OutboundLink")],1),t._v("。关于为什么选择EOS作为部署智能合约本文不做阐述，只关注如何编写和部署。")]),t._v(" "),n("h2",{attrs:{id:"怎么做"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#怎么做"}},[t._v("#")]),t._v(" 怎么做?")]),t._v(" "),n("h3",{attrs:{id:"_1-智能合约的开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-智能合约的开发"}},[t._v("#")]),t._v(" 1.智能合约的开发")]),t._v(" "),n("p",[t._v("一个EOS智能合约有以下几部分组成：C++代码、ABI文件以及基于C++代码而编译的WASM文件。C++代码里面可以分为两种，即包含合约功能的CPP源文件和包含CPP文件所引用的变量、常量、函数的HPP头文件。ABI文件就是应用二进制接口(Application Binary Interface)文件，是一个基于JSON的描述文件，是关于转换JSON和二进制格式的用户actions的。ABI还描述了如何将数据库状态和JSON的互相转换。一旦您通过ABI描述了您的合约，开发者和用户就能够用JSON和您的合约无缝交互。整个逻辑是这样：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(203),alt:"不使用别名引用"}}),t._v("\n图片来自"),n("a",{attrs:{href:"https://github.com/eosasia/ping-eos",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/eosasia/ping-eos"),n("OutboundLink")],1),t._v("项目，想学习智能合约开发的同学可以关注。")]),t._v(" "),n("p",[t._v("由图片可知，ABI文件和WAST文件都是由C++文件生成的，生成的方式可以查看官方仓库"),n("a",{attrs:{href:"https://github.com/EOSIO/eosio.cdt",target:"_blank",rel:"noopener noreferrer"}},[t._v("eosio.cdt"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h4",{attrs:{id:"todolist智能合约"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#todolist智能合约"}},[t._v("#")]),t._v(" Todolist智能合约")]),t._v(" "),n("p",[t._v("当前Todolist智能合约初步设定有增加事项、完成事项、删除事项三个基础功能，同时使用multi_index表设计了todotable数据表，每条数据包含了当前事项的id、事项内容以及是否完成三个字段。具体合约代码如下：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<eosio/eosio.hpp>")])]),t._v("\r\n\r\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" eosio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * 合约类\r\n */")]),t._v("\r\nCONTRACT yijiaxunkeji "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" eosio"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("contract "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n\r\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yijiaxunkeji")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name first_receiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" datastream"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \r\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("contract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" first_receiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n   * 新增\r\n   */")]),t._v("\r\n  ACTION "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//仅部署合约的账号操作合约")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require_auth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" _self "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检查写入的事项内容是否是空，为空则抛出错误。")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content can not be empty"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以简单的理解为要对合约的值进行操作了。")]),t._v("\r\n    todo_t "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("todos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" _self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新增一条数据 第一个参数可以理解为由谁来负担当前写入数据的资源，第二个就当做是一条item")]),t._v("\r\n    todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("emplace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" _self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//简单的理解为对当前数据库中的数据进行自增操作")]),t._v("\r\n      todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available_primary_key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n      todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         \r\n      todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_done "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n   * 完成\r\n   */")]),t._v("\r\n  ACTION "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint64_t")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require_auth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    todo_t "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("todos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//主索引中找id")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" itr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//简单的理解为检查是否找到了当前数据表的末尾了，如果到了末尾就说明没找到，那就抛出错误。")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Id does not exist"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检查当前找到的id的item中is_done是否为0")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("is_done "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The current task has been completed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改当前item也就是itr")]),t._v("\r\n    todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n      todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_done "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n   * 删除\r\n   */")]),t._v("\r\n  ACTION "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint64_t")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require_auth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    todo_t "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("todos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" itr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Id does not exist"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("is_done "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Current task is not complete. Delete is not allowed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除找到的这条id的数据itr")]),t._v("\r\n    todos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("erase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" itr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//待办事项表")]),t._v("\r\n  TABLE todotable "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint64_t")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//自增id")]),t._v("\r\n    std"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内容")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint64_t")]),t._v(" is_done"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//是否完成 0 未完成  1 完成")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//简单的理解为搜索的主要关键词，此处是id，那么查询数据表的时候")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就是用id来检索数据。这也就是上面的 find(id)能够找到itr的原因")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint64_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("primary_key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" multi_index"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"todotable"')]),t._v("_n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" todotable"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" todo_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br")])]),n("p",[t._v("一个简单的todolist智能合约代码就编写完成了，至于HPP头文件此处可以不需要，另外ABI文和WASM文件已经生成，可以在"),n("a",{attrs:{href:"https://github.com/qianduanxinlv/vuepress_blog/tree/master/docs/dapp/contract/yijiaxunkeji",target:"_blank",rel:"noopener noreferrer"}},[t._v("Todolist智能合约"),n("OutboundLink")],1),t._v("获取到。接下来我们主要讲解一下如何将其部署到EOS的"),n("a",{attrs:{href:"https://kylin.eosx.io/#/blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kylin测试链"),n("OutboundLink")],1),t._v("上。")]),t._v(" "),n("h3",{attrs:{id:"_2-智能合约的部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-智能合约的部署"}},[t._v("#")]),t._v(" 2.智能合约的部署")]),t._v(" "),n("p",[t._v("智能合约部署是通过搭建EOS链的环境来部署的，由于这个过程漫长且兼具挑战性，所以对于初学者我们还是通过网页IDE来部署的。当前使用过的网页版的有"),n("a",{attrs:{href:"https://www.eosstudio.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("EOS Studio"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://dev4eos.com/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("dev4eos"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://beosin.com/BEOSIN-IDE/index.html#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("链安Beosin-IDE"),n("OutboundLink")],1),t._v("，其中符合我的使用习惯的是链安开发的这个。故此次部署是通过Beosin-IDE实现的。")]),t._v(" "),n("ul",[n("li",[t._v("导入"),n("a",{attrs:{href:"https://github.com/qianduanxinlv/vuepress_blog/tree/master/docs/dapp/contract/yijiaxunkeji",target:"_blank",rel:"noopener noreferrer"}},[t._v("Todolist智能合约"),n("OutboundLink")],1),t._v("里面的文件（因为使用的是yijiaxunkeji这个EOS账号部署的，所以文件名和合约名都命名为yijiaxunkeji，如果你是其他的EOS账号，需要都更改为你的账户名），结果如下：")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(204),alt:"1"}})]),t._v(" "),n("ul",[n("li",[t._v("检查和编译合约\n"),n("ul",[n("li",[t._v("点击右上Compile标签")]),t._v(" "),n("li",[t._v("Select Compile Main Contract处点击后选择你自己的合约文件即当前的yijiaxunkeji.cpp")]),t._v(" "),n("li",[t._v("点击Compile按钮")]),t._v(" "),n("li",[t._v("查看Results里面是否为Compile success，Compile不成功也就是代码写错了则会在右下角提示错误。")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(205),alt:"2"}})]),t._v(" "),n("ul",[n("li",[t._v("运行和部署合约\n"),n("ul",[n("li",[t._v("点击右上Run标签")]),t._v(" "),n("li",[t._v("初步选择Local network网络")]),t._v(" "),n("li",[t._v("选择部署合约的账号（自动生成5个账号），选择其中一个")]),t._v(" "),n("li",[t._v("点击Deploy按钮")]),t._v(" "),n("li",[t._v("查看Run log list:里面是否为 Set contract success.并且右下角会出现当前合约的actions也就是声明的函数等等。")]),t._v(" "),n("li",[t._v("此时合约已经部署到本地的网络了。至此我们可以和智能合约进行简单的操作。")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(206),alt:"3"}})]),t._v(" "),n("ul",[n("li",[t._v("智能合约交互\n"),n("ul",[n("li",[t._v("Actions处选择部署的智能合约的账号，以及合约的权限，当前合约的此处可随意选择。")]),t._v(" "),n("li",[t._v("在add方法前面写入待办事项，然后点击add后，就会返回当前操作的交易哈希即transaction_id，包含了当前交互的信息。")]),t._v(" "),n("li",[t._v("Tables处选择合约里面创建的todotable表，然后点击Inquire，就能查看到当前的数据。此时可以看到我们增加了一条数据。")]),t._v(" "),n("li",[t._v("如果我们选择Actions的时候，选的是其他账户，那么操作就会被拒绝，因为我们在合约中写入了 require_auth(_self)，代表只有当前部署的账户才能操作。")]),t._v(" "),n("li",[t._v("同样done和remove函数也是一样，输入id就可以和合约交互")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(207),alt:"4"}}),t._v(" "),n("img",{attrs:{src:a(208),alt:"5"}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("以上是在本地网络部署的，所有的交易仅能本地看到，所以我们需要将其部署到测试网络或者是EOS主网上面。下面我们将通过Math Wallet 钱包插件部署合约到EOS麒麟测试网，关于钱包的创建和麦子钱包插件的使用可参考"),n("a",{attrs:{href:"hh"}},[t._v("这篇文章")])]),t._v(" "),n("ul",[n("li",[t._v("点击右上Run标签")]),t._v(" "),n("li",[t._v("选择Test network网络，此时会弹出Math钱包插件，选择CryptoKylin TestNet，点击Switch network.")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(209),alt:"6"}})]),t._v(" "),n("ul",[n("li",[t._v("切换网络后就会弹出选项让选择登陆的账户，此时选择要部署合约的账户即可。登陆后可以看到当前账户的余额。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(210),alt:"7"}}),t._v(" "),n("img",{attrs:{src:a(211),alt:"8"}})]),t._v(" "),n("ul",[n("li",[t._v("点击Deploy按钮，此时弹出请求签名的弹框，点击确认就能够看到wasm文件部署成功了。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(212),alt:"9"}}),t._v(" "),n("img",{attrs:{src:a(213),alt:"10"}})]),t._v(" "),n("ul",[n("li",[t._v("之后会自动弹出另一个请求部署abi文件的请求签名弹框，同样点击确认就可以了。不出意外会出现 Successful deployment of abi files，并且右下角会出现当前合约的actions")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(214),alt:"11"}}),t._v(" "),n("img",{attrs:{src:a(215),alt:"12"}})]),t._v(" "),n("ul",[n("li",[t._v("此时我们可以在add方法里输入待办事项，然后点击add按钮，弹出签名请求框后，对action进行签名后就能够在log里面看到当前交易的信息了。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(216),alt:"13"}})]),t._v(" "),n("ul",[n("li",[t._v("Tables里选择todotable表，然后点击Inquire后，就能够看到当前数据表中已经增加了一条数据。同样done和remove也是一样。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(217),alt:"14"}})]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("EOS的交易等都需要对交易进行签名，所以每次操作都要弹出签名请求，此时可以将当前合约账号添加到白名单，这样每次就不需要弹窗然后自动签名了。")])])])]),t._v(" "),n("p",[t._v("注： 图片太小看不清楚的话，可以访问"),n("a",{attrs:{href:"https://github.com/qianduanxinlv/vuepress_blog/tree/master/docs/dapp/contract/images",target:"_blank",rel:"noopener noreferrer"}},[t._v("部署合约步骤图片地址"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("以上便是EOS开发和部署智能合约的简易流程，更专业更可靠的流程请前往"),n("a",{attrs:{href:"https://github.com/EOSIO",target:"_blank",rel:"noopener noreferrer"}},[t._v("EOSIO"),n("OutboundLink")],1),t._v("。当然对于普通用户来讲，通过直接调用合约方法和查询表的方式有难度，所以我们需要将当前合约和网页或者是APP结合在一起，通过可视化的操作来同合约交互。那么接下来我们讲一下，如何通过前端页面和yijiaxunkeji账户部署的智能合约进行交互。")])])}),[],!1,null,null,null);s.default=r.exports}}]);